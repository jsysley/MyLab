##################################大数据Linux基础-第一周

##################################大数据Linux基础-第二周
cd/#进入根目录

ls#列出所有文件，蓝色的为目录，白色的为文件

cd bin#bin目录下的所有文件，主要存放一些命令文件
ls
cd /etc#进入etc目录，主要存放一些重要配置文件（包括各种软件的配置文件）
ls#列出所有文件
cd /proc#进入proc目录，虚拟目录主要存放系统信息，可以了解系统的运行情况
ls
cat cpuinfo#查看一个文件，即系统cpu的信息
cd /sbin#系统级的命令操作
ls
cd /home#用户的主工作目录，每创建一个新用户都会在此产生一个子目录，子用户之间不能互相查看该目录
cd /root#超级用户的主工作目录

系统提示如
[root@test /]#：root为当前用户名，test为主机名，/为当前所处目录，
#是超级用户提示符，一般用户的提示符是$

#添加用户
useradd abcd#添加一个用户，abcd#接下来可以输入密码

#用另外一个用户身份登录
su abcd#超级用户打su变一般用户，一般用户打su变超级用户，此命令之后已是一般用户abcd
su#从abcd用户变回root
exit#可以逐层退出登录，前面不断嵌套登录，该命令可以退出去

#时间有关的命令
date#查看时间
man date#查看date命令的帮助文档，f往后翻页，b往前翻页，q退出
#在此修改时间仅仅改当前系统时间 ，重启之后又恢复
hwclock#永久的修改，hw为硬件，hardware的意思
#此时可以先用date修改系统时间，用hwclock -w 将系统时间写入硬件时间
cal#查看日历
man cal#查看用法
cal -y#展示年历

#查看机器信息
uname -a#a为all的意思，系统类型+主机名+内核编号+时间+机器位数等等

#查看系统负荷
top#产生动态界面 ，第一行为时间+系统运行的时间+在线用户数+负荷平均值（表示排队等待的进程数）
#Tasks为正在运行的进程，Cpus，用户态的cpu+系统态cpu+空闲+等待
#mem为内存信息
#swap为交换分区的尺寸

who#查看在线用户，或者输入命令w
whoami#查看当前登录用户的身份，相当于id -un
id#查看用户和它所属的群组id。群组包括当前有效群组和它所属的其他群组

shutdown#关机命令，通常要等待所有用户logout才会关机
shutdown -h now #立刻关机
shutdown -r +2#系统两分钟后关机
shutdown -h 12:30#设置系统在某个时间点关机
shutdown -h 12:30 &#&将关机命令至于后台处理，不影响当前操作
shutdown -c#当设置了关机命令后取消用 ctrl+c，或者执行该命令
shutdown -k now "The Sever will shutdown now"#向所有登录用户发信息
shutdown -fr now#重新启动时不进行磁盘检测
shutdown -t 10 -h now "System will shutdown 10 second"#在多少秒后关闭系统并给用户发送提示消息

logout#注销当前登录状态

clear#清楚屏幕内容

#文件系统操作命令
ls#列出所有文件
cat#查看一个文本文件内容，catlog
rm#删除文件或目录
mv#改文件名，搬迁文件
cp#复制文件，copy
mkdir#新建一个目录
cd#change directory,改变路径
rmdir#删除目录

ls -l#列出长格式文件的名称
每一个文件的属性信息如下：
-rwxr-xr-- 1 root root 10379 Dec23 13:31 bbscon#标号7 4 5 6 3 2 1
1为文件名称，如果是符号链接，还会在文件名称后面显示其链接的对象
2为文件最后一次修改的时间
3为文件长度，对于目录文件，其内容为它所包含的文件及子目录在存储介质上的位置，因而也是有长度的。目录的长度会随着其内文件及子目录的多寡而变化
4对一般文件而言是其链接数，即该文件同时归属于多少个不同的目录。对目录文件，是该目录所直接包含的子目录数加2（实质上是两个特殊子目录——当前目录"."和".."上级目录）
第一个root是用户拥有者，第二个root是组拥有者
#权限字的意义：
-rwxr-xr--
-#表示文件的性质，一般占1个字符，常用的有(-,一般文件),(d,目录文件),(l,符号链接文件),(b,块类型设备文件),(c,字符型设备文件)
rwx#表示拥有则对该文件的权限，r表示读，w表示写，x表示执行
接着后三个字符表示组拥有者对该文件的权限
最后三个表示出了用户和主拥有者之外其他用户的权限

#当前目录
pwd#查看当前目录
cd/#转移到根目录
cd ..#返回上一级目录
ls /bin#列出bin文件夹下的文件，此时没有改变当前路径
cat /root/a1#不改变当前路径查看文件内容,假设有a1这个文件
echo abcd#在命令行显示abcd
echo xyz > /root/x2##>为输出重定向符，建立x2文件并且内容为xyz
cd#回到主目录
mv x2 y123#更改文件名
cp y123 z234#复制y123文件并且重命名为z234
mkdir 234#建立一个子目录
cd mkdir
ls#发现没有东西
cd ../y123 .#将y123文件移到该目录下，此时文件名为y123，若为./z111，则可以重新命名
mkdir -p a/b/c#可以建立一连串的目录
rm y123#删除文件，可以加路径，加上-f则没有提示是否删除
rmdir /a#删除目录,此时要求目录是空的才可以删
rm -rf#递归删除，f表示强制删除，不提示是否删除，等价于 rm -r -f

#修改文件属性
touch a5#建立一个新的文件
#用法：可以把相应的文件的最近修改时间改为当前时间，若指定文件不存在则会在相应位置上创建一个空文件（长度为0）。touch还可以将文件的最近修改时间改到一个指定时刻，touch -tMMDDhhm[CC[YY][.ss]<路径文件>。
chown <新拥有者账号> <路径文件>#将文件的拥有者改为新拥有者
chgrp <新的组拥有者> <路径文件>#将文件的组拥有者改为新组拥有者
#改权限字
chmod a+x a5#将a5文件的所有人权限都多个x
chmod a-x a5#将a5文件的所有人权限少个x 

chmod u+x a5#将用户拥有者的权限加x
chmod g+x a5#将组拥有者的权限加x
chmod o+x a5#将其他用户的权限加x

#通配符
* ：代表其所在位置上可以是任意多个字符（包括空字符）
？：代表其所在位置可以是任意单个字符
[]：在[]之间是一个字符集，如[123ab]，此符号表示其所在位置上可以使括号内所包含的字符集中的某个字符
rm -f *y#删除以y开头的文件

#链接
mkdir a b#建立两个子目录
cd a 
echo abcdxy2 > c#建立一个c文件
ls -l#看到c文件的额链接数是1，只有一个上级目录
cd ..#返回上级目录
ln ./a/c ./b#做一个链接，将c文件链接到b，建立的是硬链接
cd /b
ls #发现有文件c
ls -l#c文件链接数2
###删除时要a目录下删除，此时在a目录看不到c，但c还在b目录，两个目录都删除则删除c
ln -s ./a/c ./b#建立符号链接，即快捷符号而已，此时并没有建立真实链接

##################################大数据Linux基础-第三周
#递归操作选项，当要进行递归操作时，可以使用-R(或-r)选项
ls -R#此时输出不能被控制，加上|more可以控制，f后翻页(或者空格)，回车翻一行，q退出;|less可实现往前翻页(B往前翻页)
cp -R
chmod -R#改变当前目录为起点的整个树形结构的权限
rm -R

#wc命令
man wc
#查看帮助，数一下一个文件有多少行、单词、字节等等
wc ./my.cnf#查看当前目录下的my.cnf文件，输出结果一次为，行数，单词数，字符数
wc -l ./my.cnf#仅仅给出行数
wc -c ./my.cnf#仅仅给出字符数
#需求：数数当前目录下有多少个文件是cnf结尾的
ls *.cnf#列出所有cnf文件
#用管道输出符，将一个命令的输出作为另一个命令的输入
ls *.cnf | wc -l#可以实现数数有多少个文件

#拷贝整个目录用-R选项
cd#回到主目录
mkdir -p a/b/c/d#建立深层目录
#需求：拷贝a的整个树形结构(文件夹及其内容)
cp -R a aa#将a拷贝出来，重命名为aa，放在同一个地方。
#但此时拷贝的文件拥有者为当前用户，若要保持权限不变，cp -pR a abc

#全屏幕编辑器vi
#在不同系统中可能通过不同程序来实现vi功能，在redhat中常使用elvis和vim，并在/bin目录下设置名为vi的符号链接来指向相应程序。
#使用vi进行文本编辑，可以在系统提示符输入：vi [文本文件名称]
#如果指定要编辑的文件不存在，则建立一个新文本
#要编辑的文本被显示在屏幕上，行首处有“~”符号表示该行是一个空行
#vi有两种工作状态，命令状态和编辑状态
#刚进入时处于命令状态，i 则进入编辑状态，esc退出编辑状态
#a:从光标所在之处的后面插入新的字符，插入时，后面的字符会随着新增字符往后移动
#A:从光标所在行的最后处开始加入新的字符
#i:从光标所在之处的前面插入新的字符，插入时，插入处后面的字符会随着新增字符往后移动
#I:从光标所在行的第一个非空字符前面开始加入新的字符
#o:在光标所在行的下面加一行
#O:在光标所在行的上面新增一行，并进入插入状态
#s:删除光标所在之处的字符，并进入插入状态
#S:删除光标所在的行，并进入插入状态
###在命令状态：
#光标移动：方向键&hjkl
#光标移到行开始的地方：0
#光标移到当前窗口（非全文）的第一行起始处：H
#光标移到当前窗口居中一行的起始处：M
#光标移到当前窗口最后一行的起始处：L
#光标移到下一个单词（word)的第一个字符处：W
#光标移到上一个单词的第一个字符处：B
#光标移到当前单词的最后一个字符处：E
#将光标移到<数目>行行首：<数目>G
#将光标移到上一行的第一个非空字符处：-
#将光标移到下一行的第一个非空字符处：+
###删除命令：
X:删除光标所在处字符
dd:删除光标所在行
D:删除从光标所在之处到该行末尾的全部字符
u:恢复刚被删除的文本
U:恢复光标所在行在此次编辑的全部改变
###替换命令：
r:替换光标所处的字符，按r后紧跟着按要改为的字符
R:进入替换状态，可以连续替换多个字符，esc退出该状态
###保存与退出
:q:退出vi
:q!:舍弃当前对编辑内容的修改，强行退出vi
:w[<文件名称>]：将正在编辑的内容以<文件名称>为名存盘，如果没有指定<文件名称>，则使用原有文件名称
:wq:存盘退出
###搜索功能
/<字符串>：从光标所在处开始，往后搜索字符串
？<字符串>:从光标所在处开始，往前搜索字符串
n:配合/与？命令，表示继续往同一方向检索一次
m:配合/与？命令，表示往反方向检索一次
###块操作
d<范围>：删除一个由<范围>所指定的文本块(d表示删除)，并将其放入缓冲区，<范围>往往是一个光标移动命令，表示“从光标当前位置到目标位置之间的文本快”
E:从光标当前位置到当前所在单词的最后一个字符
B:从光标当前位置到上一个单词的第一个字符
$:从光标当前位置到该行最后一个字符
):从光标当前位置到下一句的第一个字符
3):从光标当前位置到后面第三句的第一个字符
{：从光标当前位置到当前段落的第一个字符
}：从光标当前位置到下一段落的第一个字符
y<范围>：把<范围>指定的快复制到缓冲区
p:放置到光标所在处

#文本操作
#使用cat命令可以显示文本文件内容，但对于一些内容较多的文本可能使屏幕快速上翻，以致用户不能及时看清输出内容，可以用more暂停。
#管道符：|
#more的改进版：less

#实现多重传送：test命令
#用输出重定向符把输出内容送往空设备
#使用tee与管道符配合，可以实现命令结果多重传送，除了标准输出，还可以将输出送往tee所指定的设备文件或普通文件。
#将文件abc内容在屏幕上显示，在连接并行口/dev/lp0上的打印机输出，可用：cat abc|tee /dev/lp0
#将abc文件在屏幕输出同时实现翻屏暂停，可以使用两重管道符:cat abc|tee /dev/lp0|less
cd /dev#查看系统检测到的设备

#重整输出格式命令:pr,可以处理其他命令产生的输出格式，pr <可选项> [<文件名称>]
#此命令使<文件名称>所代表文件按指定的格式在标准输出处输出，如果<文件名称>被省略 ，则可通过管道获得输入，常用可选项：
+<页号>：从指定页号开始输出，缺省页1
-<栏数>：指定输出的分栏数，缺省1
-W:每行字符数，缺省72
-l:每页行数，缺省66
-h<字符串>:用指定的字符串代替文件名作为题头

#head命令和tail命令
tail [-<数目>] <文件名称>：将文本文件的最后部分输出，<数目>表示要输出的行数
head [-<数目>] <文件名称>：将文本文件的开头部分输出，<数目>表示要输出的行数

#find命令,find <目录列表> <检索方式> [<执行动作>]
#目录列表是指在哪些目录树中进行操作，在此指出该目录树的起点目录，若有多个目录，可以空格分开或使用通配符。
#<检索方式>主要有：
1) 根据文件（目录）名称进行检索
-name <文件名称>，<文件名称>可以使用通配符进行模糊查询
-iname <文件名称>，这种用法不区分大小写
2) 根据文件类型，即权限字串中的第一个字符进行检索
- type <文件类型>#f一般文件，d目录文件，c字符设备文件，b块设备文件，p管道文件，l符号链接，s套接文件
#例子
find . -name "a*"#找到以a开头的文件
find . -name "a*" -type f#仅找文件，-type d为目录
3) 根据文件的连接数进行检索
-link <数目>，<数目>指定文件的连接数
4) 根据文件的八进制权限串进行检索
-perm [-] <八进制权限串>
5) 根据文件大小检索
-size <数目>k
6)根据文件拥有者进行检索
-user <拥有者账号名称>
7) 根据文件被访问或被修改的时间进行检索
-atime <数目>，表示检索在<数目>所指定的天数前访问过的文件
-mtime <数目>，表示检索在<数目>所指定天数前修改过的文件
-newer <文件名称>，表示检索所有修改时间比<文件名称>所指定文件更新的文件

#全文检索命令：grep
#可用于检索包含指定字符表达式的文件，字符表达式可以包含通配符实现模糊查询
#grep <正则表达式> <文件名称列表>

#ps：查看当前正在运行的进程
#ps -el：列出详细进程信息，e表示所有进程而不仅仅是用户进程
#ps -elgrep tcpsever:筛选出tcpsever有关的进程 


##################################大数据Linux基础-第四周
应用程序和系统命令的关系：
1、文件位置
	系统命令：一般在/bin和/sbin目录中，或为Shell内部指令（bin中命令普通管理员可以执行，sbin中系统管理员可以执行。）
	应用程序：通常在/user/bin和usr/sbin目录中
2、主要用途：
	系统命令：完成对系统的基本管理工作，例如IP配置工具
	应用程序：完成相对独立的其他辅助任务，例如网页浏览器
3、适用环境：
	系统命令：一般只在字符操作界面中进行
	应用程序：根据实际需要，有些程序可以在图形界面中运行
4、运行格式：
	系统命令：一般包括命令字，命令选项和命令参数
	应用程序：通常没有固定的执行格式

典型的应用程序目录
普通执行文件：/usr/bin
服务器执行程序文件和管理程序文件：/usr/sbin
应用程序配置文件：/etc
日志文件：/var/log
应用程序文档文件：/usr/share/doc
应用程序手册文件：/usr/share/man

常见的软件包封装类型
rpm包：扩展名为.rpm
deb包：扩展名为.deb
源代码软件包：一般为.tar.gz、.tar.bz2等格式的压缩包包含程序的原始代码
附带安装程序的软件包：在压缩包内提供install.sh、setup等安装程序或以.bin格式的单个执行文件提供。
绿色免安装的软件包：在压缩包内提供已编译好的执行程序文件，解开压缩包后的文件可以直接使用。

rpm包管理工具
RedHat公司提出
建立统一的数据库文件，详细记录软件包安装、卸载等变化信息，能够自动分析软件包依赖关系
一般命名格式：bash-4.1.2-15.el6_4.x86_64.rpm（其中bash为软件包名称，15为发布次数，x86_64为硬件平台）
查询已安装的的rpm软件信息：
	rpm -q[子选项] [软件名]
	-qa:查看系统中已安装的所有rpm软件包列表
	-qi：查看指定软件的详细信息
	-ql:查询指定软件包所安装的目录，文件列表
	-qc：仅显示指定软件包安装的配置文件
	-qd：仅显示指定软件包安装的文档文件
	-q--script：查看安装或卸载软件包的脚本
	-q--changelog：查看软件包的改变信息
	-q：查看是否安装该软件包（或者rpm -qa | grep [软件名/关键字]）
查询文件或目录属于哪个rpm软件
	rpm -qf 文件或目录名

which ls#查看该命令是哪个文件提供的
rpm -qf [以上显示路径]/ls#可以查看ls命令是哪个软件包提供的

查询rpm软件包信息：
	查询系统中是否已安装bash软件包
		rpm -q bash
		rpm -qa | grep bash
	查询vim是由哪个软件包安装的
		which vim；rpm -qf /usr/bin/vim 
	查询未安装的rpm软件包信息
		rpm -qp[子选项] rpm包文件
			-qpi：通过.rpm包文件查看该软件的详细信息
			-qpl：查看.rpm安装包内所包含的目录、文件列表
			-qpc：查看.rpm安装包内包含的配置文件列表
			-qpd：查看.rpm安装包内包含的文档文件列表
	查看ethtool软件包的信息
		rpm -qpi ethtool-3.5-1.el6.x86_64.rpm
	查看ethtool软件包安装时安装的文件列表
		rpm -qpl ethtool-3.5-1.el6.x86_64.rpm
	安装或升级rpm软件
		rpm [选项] rpm包文件
		-i：安装一个新的rpm软件包
		-U：升级某个rpm软件，若原本未安装，则进行安装
		-F:更新某个rpm软件，若原本未安装，则放弃安装
	卸载指定的rpm软件
		rpm -e 软件名
	辅助选项：
		--force：强制安装所指定的rpm软件包
		--nodeps：安装、升级或卸载软件时，忽略依赖关系
		-h：以”#“显示安装的进度
		-v：显示安装过程中的详细信息

维护rpm数据库
	rpm数据库作用
		记录linux系统中安装、卸载、升级应用程序的相关信息
		由rpm包管理系统自动完成维护，一般不需要用户干预
	rpm数据库存放位置：
		cd /var/lib/rpm/
	重建rpm数据库
		rpm --rebuilddb
		rpm --initdb
	###案例，恢复数据库
	删除已被破坏的rpm数据库
		rm -rf __db.*
	对rpm数据进行重建
		rpm --rebuilddb
	###案例，恢复数据库
	查看rpm数据库存放位置
		cd /var/lib
		ls
	备份原有rpm目录
		mv rpm rpm.old
	创建一个新的rpm目录
		mkdir rpm
	初始化数据库
		rpmdb --initdb
	将旧目录的Packages文件复制到rpm目录
		cp rpm.old/Packages rpm
		rpmdb --rebuilddb
	rpm软件包公钥管理(公钥查看软件的完整性)
		查看系统是否有公钥
			rpm -qa gpg-pubkey
		导入公钥
			rpm --import /media/RPM-GPG-KEY-redhat-release
		查看公钥是否导入成功
			rpm -qa gpg-pubkey
		查看公钥信息
			rpm -qi gpg-pubkey-2fa658e0-45700c69
		用公钥验证软件包的完整性
			rpm -K /media/Package/http-2.2.15-29.el6_4.x86_64.rpm
			rpm -vvK /media/Package/http-2.2.15-29.el6_4.x86_64.rpm(显示详细信息)
		卸载公钥
			rpm -e gpg-pubkey-fd431d51-4ae0493b
			rpm -qa gpg-pubkey(发现已经没有了)

解决软件包依赖关系
	被依赖的软件包需要先安装
	同时指定多个.rpm包文件进行安装
卸载有依赖关系的多个软件小组
 	依赖其他程序的软件包需要先卸载
 	同时指定多个软件名进行卸载
忽略依赖关系
	--nodeps

YUM(Yellowdog Updater Modified，一定程序为解决软件包依赖关系提出)
	基于rpm包构建的软件更新机制
	可以自动解决依赖关系
	所有软件包由集中的yum软件仓库提供

	准备安装源1
		软件仓库的提供方式
			FTP服务:ftp://
			HTTP服务：http://
			本地目录：file:///
		rpm软件包的来源
			RedHat发布的rpm包集合
			第三方组织发布的rpm包的集合
			用户自定义的rpm包的集合
		epel软件源
			Extra Packages for Enterprise Linux（企业版Linux额外的软件包）
			Fedora小组维护的一个软件仓库
			为RHEL/CentOS提供他们不默认提供的软件包
			兼容RHEL和CentOS及他们的衍生版本
	配置EPEL源
		安装EPEL源
			rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
		查看生成的repo文件
			cd /etc/yum.repos.d/
			cat epel.repo#查看epel所提供的epel-release源
			ls
			cat epel-testing.repo#测试用的，enable=0未启用
		查看epel源是否添加到系统当中
			yum repolist
		为客户机指定YUM仓库位置
			配置文件：/etc/yum.repos.d/*.repo
		直接以CentOS 6.5 光盘做软件仓库
			将CentOS 6.5光盘放入光驱
			安装autofs软件包，并启动autofs服务
			指定仓库位置，URL地址为file:///misc/cd

YUM工具概述
	关于YUM命令
		由软件包yum-3.2.29-40.el6.noarch.rpm提供
		用来访问YUM仓库，查询，下载及安装，卸载软件包
	YUM的配置文件
		基本设置：/etc/yum.conf
		仓库设置：/etc/yum.repos.d/*.repo
		日志文件：/var/log/yum.log
	YUM缓存目录：
		存放下载的软件包、仓库信息等数据
		位于/var/cache/yum/$basearch/$releasever
	软件包查询#例子vsftpd
		yum list [软件名]
		yum info [软件名]
		yum search <关键词>
		yum provides <关键词>
	###安装时包缺少，可以用yum provides "*/<关键词>"；找到该软件包，安装即可
	查询软件包组
		yum grouplist [包组名]
		yum groupinfo <包组名>
	软件安装，升级
		yum install [软件名]
		yum groupinstall <包组名>
	升级软件
		yum upgrade#对所有软件升级
		yum groupupdate
		yum -y install [软件名]#安装时安装所有依赖包，不用自己输入y确认
	卸载软件#最好不用该命令，会卸载相关依赖包
		yum remove <软件名>
		yum groupremove <包组名>
		yum grouperase <包组名>
	YUM插件
		yum-plugin-changelog:使用yum 查看软件包changelog（改变信息）
		yum -y install yum-plugin-changelog
		yum changelog all vsftpd
	YUM插件
		yum-plugin-versionlock <软件名>:将系统中某些软件锁定到特定版本
		yum versionlock list :查看系统中锁定的软件包的版本号
		yum versionlock delete '<>':将锁定的软件包从系统中解锁